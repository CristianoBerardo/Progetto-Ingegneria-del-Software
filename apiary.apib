FORMAT: 1A
HOST: https://agritrento.onrender.com/

# AgriTrento

**Idea di progetto**: siluppare una piattaforma web che faciliti la prenotazione e la vendita di
frutta e verdura del mercato contadino di Trento, incentivando il consumo di prodotti
stagionali locali, favorendo pratiche sostenibili e nel rispetto del nostro territorio.


AgriTrento mette a disposizione le seguenti API.

## Produttori [/api/v1/producers]

CRUD sulle risorse produttori

### Lettura produttori [GET /api/v1/producers]

+ Response 200 (application/json)

            [
                {
                "success": true,
                "data": [
                    {
                        "_id": "6829d852f157077cbf886a50",
                        "name": "Azienda 1",
                        "email": "azienda1@azienda1.it",
                        "phone": "+39 3771954812",
                        "address": "Via Carlo Magno, 17, Caldonazzo, Trento, Italia",
                        "products": [
                            "68250af830cf8930e4cd9222"
                        ],
                        "__v": 0
                    },
                    {
                        "_id": "6829f7cfbf802532dc2eae8e",
                        "name": "Azienda 2",
                        "email": "azienda2@azienda2.it",
                        "phone": "+39 3771954812",
                        "address": "Via Napolenone, 12, Trento, Trento, Italia",
                        "products": [
                            "68250af831cf893054cd9282"
                        ],
                        "__v": 0
                    }
                ],
                "message": "Producers retrieved successfully"
                }
            ]

### Ricerca produttori [GET /api/v1/producers?name=Azi]

+ Response 200 (application/json)

            [
                {
                "success": true,
                "data": [
                    {
                        "_id": "6829d852f157077cbf886a50",
                        "name": "Azienda 1",
                        "email": "azienda1@azienda1.it",
                        "phone": "+39 3771954812",
                        "address": "Via Carlo Magno, 17, Caldonazzo, Trento, Italia",
                        "products": [
                            "68250af830cf8930e4cd9222"
                        ],
                        "__v": 0
                    }
                ],
                "message": "Producers retrieved successfully"
                }
            ]
            
### Lettura prodotti di un dato produttore [GET /api/v1/producers/6842af718df9bccc89e20488/products]

+ Response 200 (application/json)

            {
                "success": true,
                "data": [
                    {
                        "_id": "6842b79046519ddb7febaed6",
                        "name": "Carote",
                        "description": "carote trentine",
                        "price": 6.59,
                        "available": 50,
                        "producer": "6842af718df9bccc89e20488",
                        "__v": 0
                    },
                    {
                        "_id": "6842e34628298882cfa79dde",
                        "name": "Pomodoro",
                        "description": "Pomodoro Bio Trentino",
                        "price": 4,
                        "available": 50,
                        "producer": "6842af718df9bccc89e20488",
                        "__v": 0
                    },
                    {
                        "_id": "6842e91828298882cfa79ecf",
                        "name": "Lattuga gentile",
                        "description": "Lattuga verace",
                        "price": 3.99,
                        "available": 10,
                        "producer": "6842af718df9bccc89e20488",
                        "__v": 0
                    },
                    {
                        "_id": "684358b841d9ab20481051ec",
                        "name": "Asparagi",
                        "description": "Asparagi di lago",
                        "price": 15,
                        "available": 140,
                        "producer": "6842af718df9bccc89e20488",
                        "__v": 0
                    },
                    {
                        "_id": "68446070a300df796145e04a",
                        "name": "Fichi",
                        "description": "Fichi Siciliani",
                        "price": 10,
                        "available": 60,
                        "producer": "6842af718df9bccc89e20488",
                        "__v": 0
                    }
                ],
                "message": "Found 5 products for producer Azienda Trento"
            }
        
###  Lettura nomi produttori[GET /api/v1/producers/names]

+ Response 200 (application/json)

            [
                {
                "success": true,
                "data": [
                    {
                        "_id": "6829d852f157077cbf886a50",
                        "name": "Azienda 1"
                    },
                    {
                        "_id": "6829f7cfbf802532dc2eae8e",
                        "name": "Azienda 2",
                    }
                ],
                "message": "Producers retrieved successfully"
                }
            ]
        
###  Lettura produttore[GET /api/v1/producers/6842af718df9bccc89e20488]

+ Response 200 (application/json)

            {
                "success": true,
                "data": 
                    {
                        "_id": "6829d852f157077cbf886a50",
                        "name": "Azienda 1",
                        "email": "azienda1@azienda1.it",
                        "phone": "+39 3771954812",
                        "address": "Via Carlo Magno, 17, Caldonazzo, Trento, Italia",
                        "products": [
                            "68250af830cf8930e4cd9222"
                        ],
                        "__v": 0
                    },
                "message": "Producers retrieved successfully"
            }

### Create produttore [POST /api/v1/producers/]

+ Request (application/json)

            {
                "name": "cancella",
                "uid": "cancella",
                "email": "cancella",
                "phone": "cancella",
                "address": "cancella",
                "products": ["682506cce8e7949a2d078b1c"]
            }

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "data": {
                    "name": "Azienda 3",
                    "email": "azienda3@azienda3.it",
                    "phone": "+39 3771954812",
                    "address": "Via Cesare Battisti, 17, Levico, Trento, Italia",
                    "products": [],
                    "_id": "682b32359e2b5e805fdb2fce",
                    "__v": 0
                },
                "message": "Producer created successfully"
            }
            
### Elimina produttore [DELETE /api/v1/producers/684733fc25f3ec8ac3234f0a]

+ Response 200 (application/json)
    
    + Body

            {
                "success": true,
                "data": {
                    "name": "Azienda 3",
                    "email": "azienda3@azienda3.it",
                    "phone": "+39 3771954812",
                    "address": "Via Cesare Battisti, 17, Levico, Trento, Italia",
                    "products": [],
                    "_id": "682b32359e2b5e805fdb2fce",
                    "__v": 0
                },
                "message": "Producer and relative products are deleted successfully"
            }
            
### Aggiornamento completo produttore [PUT /api/v1/producers/684733fc25f3ec8ac3234f0a]

+ Request (application/json)

            {
                "name": "NEW Azienda 3",
                "email": "NEWazienda3@azienda3.it",
                "phone": "+39 3333333333",
                "address": "Piazza Cesare Battisti, 17, Levico, Trento, Italia",
                "products": [
                    "68250af831cf893054cd9282"
                ],
            }

+ Response 200 (application/json)
    
    + Body

            {
                "success": true,
                "data": {
                    "name": "NEW Azienda 3",
                    "email": "NEWazienda3@azienda3.it",
                    "phone": "+39 3333333333",
                    "address": "Piazza Cesare Battisti, 17, Levico, Trento, Italia",
                    "products": [
                        "68250af831cf893054cd9282"
                    ],
                    "_id": "682b32359e2b5e805fdb2fce",
                    "__v": 0
                },
                "message": "Producer updated successfully"
            }

### Aggiornamento parziale produttore [PATCH /api/v1/producers/684733fc25f3ec8ac3234f0a]

+ Request (application/json)

            {
                "name": "Azienda 3",
            }

+ Response 200 (application/json)
    
    + Body

            {
                "success": true,
                "data": {
                    "name": "Azienda 3",
                    "email": "NEWazienda3@azienda3.it",
                    "phone": "+39 3333333333",
                    "address": "Piazza Cesare Battisti, 17, Levico, Trento, Italia",
                    "products": [
                        "68250af831cf893054cd9282"
                    ],
                    "_id": "682b32359e2b5e805fdb2fce",
                    "__v": 0
                },
                "message": "Producer updated successfully"
            }
            
## Prodotti [/api/v1/products]

CRUD sulle risorse prodotti

### Lettura prodotti[GET /api/v1/products/]

+ Response 200 (application/json)

            [
                {
                    "success": true,
                    "data": [
                        {
                            "_id": "682a43f39ce62815f3f88802",
                            "name": "Zucchina",
                            "description": "Zucchina di Trento",
                            "price": 6,
                            "available": 125,
                            "producer": "682b32359e2b5e805fdb2fce",
                            "__v": 0
                        },
                        {
                            "_id": "682b3b0acc48a587b641a5fe",
                            "name": "Pomodoro",
                            "description": "Pomodoro di Trento",
                            "price": 6,
                            "available": 125,
                            "producer": "682b32359e2b5e805fdb2fce",
                            "__v": 0
                        }
                    ],
                    "message": "Products retrieved successfully"
                }
            ]
            
### Ricerca prodotti[GET /api/v1/products?name=Zucchina&minPrice=2]

+ Response 200 (application/json)

            [
                {
                    "success": true,
                    "data": [
                        {
                            "_id": "682a43f39ce62815f3f88802",
                            "name": "Zucchina",
                            "description": "Zucchina di Trento",
                            "price": 6,
                            "available": 125,
                            "producer": "682b32359e2b5e805fdb2fce",
                            "__v": 0
                        }
                    ],
                    "total": 1,
                    "message": "Products retrieved successfully"
                }
            ]
        
### Lettura prodotto[GET /api/v1/products/6842b79046519ddb7febaed6]

+ Response 200 (application/json)

            {
                "name": "Zucchina",
                "description": "Bello",
                "price": "6",
                "available": "12",
                "producer": "6829d852f157077cbf886a50"
            }
        
### Create prodotto [POST /api/v1/products/]

+ Request (application/json)

            {
                "name": "Peperone",
                "description": "Peperone di Trento",
                "price": "6",
                "available": "12",
                "producer": "6829d852f157077cbf886a50"
            }

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "data": {
                    "name": "Peperone",
                    "description": "Peperone di Trento",
                    "price": 6,
                    "available": 12,
                    "producer": "6829d852f157077cbf886a50",
                    "_id": "682b3c08a10424f6de694ce5",
                    "__v": 0
                },
                "message": "Product created successfully"
            }

### Elimina prodotto [DELETE /api/v1/products/684734fc25f3ec8ac3234f18]

+ Response 200 (application/json)
    
    + Body

            {
                "success": true,
                "data": {
                    "_id": "682b3c08a10424f6de694ce5",
                    "name": "Peperone",
                    "description": "Peperone di Trento",
                    "price": 6,
                    "available": 12,
                    "producer": "6829d852f157077cbf886a50",
                    "__v": 0
                },
                "message": "Product deleted successfully"
            }
        
### Aggiornamento completo prodotto [PUT /api/v1/products/684734fc25f3ec8ac3234f18]

+ Request (application/json)

            {
                "name": "Cipolla",
                "description": "Cipolla di Trento",
                "price": 12,
                "available": 24,
                "producer": "6829d852f157077cbf886a50"
            }

+ Response 200 (application/json)
    
    + Body

            {
                "success": true,
                "data": {
                    "_id": "682b3c08a10424f6de694ce5",
                    "name": "Cipolla",
                    "description": "Cipolla di Trento",
                    "price": 12,
                    "available": 24,
                    "producer": "6829d852f157077cbf886a50",
                    "__v": 0
                },
                "message": "Product updated successfully"
            }
        

### Aggiornamento parziale produttore [PATCH /api/v1/products/684734fc25f3ec8ac3234f18]

+ Request (application/json)

            {
                "name": "Cipolla"
            }

+ Response 200 (application/json)
    
    + Body

            {
                "success": true,
                "data": {
                    "_id": "682b3c08a10424f6de694ce5",
                    "name": "Cipolla",
                    "description": "Peperone di Trento",
                    "price": 6,
                    "available": 12,
                    "producer": "6829d852f157077cbf886a50",
                    "__v": 0
                },
                "message": "Product partially updated successfully"
            }

## Clienti [/api/v1/clients]

CRUD sulle risorse clienti

### Lettura clienti [GET /api/v1/clients/]

+ Response 200 (application/json)

            [
                {
                    "success": true,
                    "data": [
                        {
                            "_id": "682b41a64f824f4cb9774470",
                            "username": "Melania",
                            "email": "melania@melania.it",
                            "phone": "+39 5771284351",
                            "shippingAddress": "Via Tolomeo, 2, Lavis, Trento, Italia",
                            "__v": 0
                        }
                    ],
                    "message": "Clients retrieved successfully"
                }
            ]
        
### Lettura cliente[GET /api/v1/clients/6842aea18df9bccc89e20476]

+ Response 200 (application/json)

            {
                "success": true,
                "data": {
                    "_id": "682b41a64f824f4cb9774470",
                    "username": "Melania",
                    "email": "melania@melania.it",
                    "phone": "+39 5771284351",
                    "shippingAddress": "Via Tolomeo, 2, Lavis, Trento, Italia",
                    "__v": 0
                },
                "message": "Client retrieved successfully"
            }
        
### Create cliente [POST /api/v1/clients/]

+ Request (application/json)

            {
                "uid": "cliente1",
                "username": "cliente",
                "email": "email",
                "phone": "2313",
                "shippingAddress": "string",
                "roles": "client",
                "orders": []
            }

+ Response 201 (application/json)

    + Body

            {
              "success": true,
              "data": {
                "uid": "cliente1",
                "username": "cliente",
                "email": "email",
                "phone": "2313",
                "shippingAddress": "string",
                "roles": "client",
                "orders": [],
                "_id": "6847364d25f3ec8ac3234f26",
                "__v": 0
              },
              "message": "Client created successfully"
            }

### Elimina cliente [DELETE /api/v1/clients/6847364d25f3ec8ac3234f26]

+ Response 200 (application/json)
    
    + Body

            {
                "success": true,
                "data": {
                    "_id": "682b41a64f824f4cb9774470",
                    "username": "MelaniaMel",
                    "email": "NEWmelania@melania.it",
                    "phone": "+39 3333333333",
                    "shippingAddress": "NEW Via Tolomeo, 2, Lavis, Trento, Italia",
                    "__v": 0
                },
                "message": "Client retrieved successfully"
            }
        
### Aggiornamento completo cliente [PUT /api/v1/clients/6847364d25f3ec8ac3234f26]

+ Request (application/json)

            {
                "username": "NEWMelania",
                "email": "NEWmelania@melania.it",
                "phone": "+39 3333333333",
                "shippingAddress": "NEW Via Tolomeo, 2, Lavis, Trento, Italia"
            }

+ Response 200 (application/json)
    
    + Body

            {
                "success": true,
                "data": {
                    "_id": "682b41a64f824f4cb9774470",
                    "username": "NEWMelania",
                    "email": "NEWmelania@melania.it",
                    "phone": "+39 3333333333",
                    "shippingAddress": "NEW Via Tolomeo, 2, Lavis, Trento, Italia",
                    "__v": 0
                },
                "message": "Client updated successfully"
            }
        

### Aggiornamento parziale cliente [PATCH /api/v1/clients/6847364d25f3ec8ac3234f26]

+ Request (application/json)

            {
                "username": "MelaniaMel"
            }

+ Response 200 (application/json)
    
    + Body

            {
                "success": true,
                "data": {
                    "_id": "682b41a64f824f4cb9774470",
                    "username": "MelaniaMel",
                    "email": "NEWmelania@melania.it",
                    "phone": "+39 3333333333",
                    "shippingAddress": "NEW Via Tolomeo, 2, Lavis, Trento, Italia",
                    "__v": 0
                },
                "message": "Client partially updated successfully"
            }

## Autenticazione e Registrazione [/auth]

Tutti i ruoli presenti nell'applicazione (Cliente, Produttore e Amministratore) utilizzano questo endpoint.

Il Login permette di decodificare il token ricevuto da Firebase, verificare i Custom Claims, ovvero durante la creazione di un nuovo utente, verrà
inserito in firebase il suo ruolo nell'applicazione. 

Questo ruolo qui viene verificato se corrisponde anche a quanto inserito nel Database.

### Login [POST /auth/login/]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "message": "Login successful <client, producer, administrator>",
                "data": {
                        "customToken": "...",
                        "uid": "...",
                        "userRole": "<client, producer, administrator>",
                    },
            }
            
### Registra cliente [POST /register/clients/]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`

+ Request (application/json)

            { 
                "username": "AgriTrento", 
                "email": "agritrento@agritrento.it" 
            }

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "message": "Registration successful",
                "data": {
                    "token": "...",
                    "userRole": "client",
                    },
            }
            
### Registra produttore [POST /register/producer/]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`

+ Request (application/json)

            { 
                "name": "Azienda",
                "phone": "+39 6447281657",
                "address": "Via Italia, Levico, Trento, Italia",
                "email": "azienda@azienda.it"
            }

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "message": "Producer registration successful",
                "data": {
                    "token": "...",
                    "userRole": "producer",
                    },
            }

## Ordini con token JWT [/api/v1/orders]

Utilizzando questi endpoint verrà verificato, attraverso l'utilizzo di Bearer token, se il cliente (solo lui) può modificare le risorse.

Essendo che il token contiene UID del cliente, chi manda la richiesta potrà solo modificare i propri ordini.

### Crea ordine [POST /api/v2/orders]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`

+ Request Crea Ordine (application/json)

    + Body

            {
                "products": [{
                    "productId": "6842b79046519ddb7febaed6",
                    "quantity": 100
                }],
                "totalPrice": 100,
                "pickupDate": "07/07/2025"
            }

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "message": "Order created successfully",
                "savedOrder": {
                    "clientId": "6842af138df9bccc89e20482",
                    "products": [
                        {
                            "productId": "6842b79046519ddb7febaed6",
                            "quantity": 100
                        }
                    ],
                    "totalPrice": 100,
                    "pickupDate": "2025-07-06T22:00:00.000Z",
                    "_id": "68445b64a300df796145e03b",
                    "orderDate": "2025-06-07T15:31:48.934Z",
                    "__v": 0
                }
            }
            
### Leggi ordini [GET /api/v1/orders]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`


+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "message": "Orders fetched successfully",
                "orders": [
                    {
                        "_id": "68431f4a221adf2d3fd06b94",
                        "totalPrice": 17215.393000000015,
                        "status": "pending",
                        "pickupDate": "2025-06-07T00:00:00.000Z"
                    },
                    {
                        "_id": "68443709f2d1e2024963b6a8",
                        "totalPrice": 150,
                        "status": "pending",
                        "pickupDate": "2025-06-08T00:00:00.000Z"
                    },
                    {
                        "_id": "68445b64a300df796145e03b",
                        "totalPrice": 100,
                        "status": "pending",
                        "pickupDate": "2025-07-06T22:00:00.000Z"
                    }
                ]
            }
            
### Elimina ordine [DELETE /api/v2/orders/:id]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`


+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "message": "Order cancelled successfully"
            }

## Prodotti con token JWT [/api/v2]

Utilizzando questi endpoint verrà verificato, attraverso l'utilizzo di Bearer token, se il produttore (solo lui) può modificare le risorse.

Essendo che il token contiene UID del produttore, chi manda la richiesta potrà solo modificare i propri prodotti.

### Crea prodotto [POST /api/v2/products]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`

+ Request (application/json)

    + Body

            {
                "name": "Fichi",
                "description": "Fichi Siciliani",
                "price": "6",
                "available": "60"
            }

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "data": {
                    "name": "Fichi",
                    "description": "Fichi Siciliani",
                    "price": 6,
                    "available": 60,
                    "producer": "6842af718df9bccc89e20488",
                    "_id": "68446070a300df796145e04a",
                    "__v": 0
                },
                "message": "Product created successfully"
            }
            
### Modifica parziale prodotto [PATCH /api/v2/products/:id]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`

+ Request (application/json)

    + Body

            {
                "price": "10",
            }

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "data": {
                    "_id": "68446070a300df796145e04a",
                    "name": "Fichi",
                    "description": "Fichi Siciliani",
                    "price": 10,
                    "available": 60,
                    "producer": "6842af718df9bccc89e20488",
                    "__v": 0
                },
                "message": "Product partially updated successfully"
            }
            
### Modifica totale prodotto [PUT /api/v2/products/:id]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`

+ Request (application/json)

    + Body

            {
                "name": "Fichi Verdi",
                "description": "Fichi Verdi Siciliani",
                "price": "15",
                "available": "30"
            }

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "data": {
                    "_id": "6843591c41d9ab20481051f5",
                    "name": "Fichi Verdi",
                    "description": "Fichi Verdi Siciliani",
                    "price": 15,
                    "available": 30,
                    "producer": "6842af718df9bccc89e20488",
                    "__v": 0
                },
                "message": "Product updated successfully"
            }
            
### Elimina prodotto [DELETE /api/v2/products/:id]

+ Parameters
    + Authorization: `Bearer <IL_TUO_TOKEN_JWT>`

+ Response 201 (application/json)

    + Body

            {
                "success": true,
                "data": {
                    "_id": "6843591c41d9ab20481051f5",
                    "name": "Fichi Verdi",
                    "description": "Fichi Verdi Siciliani",
                    "price": 15,
                    "available": 30,
                    "producer": "6842af718df9bccc89e20488",
                    "__v": 0
                },
                "message": "Product deleted successfully"
            }

## API [/api]

Permette di visualizzare tutti gli endpoint dell'applicazione

### Mappa delle API [GET /api/]

+ Response 200 (application/json)

            [
                {
                    "path": "/api/v1/admin",
                    "methods": [
                        "POST"
                    ],
                    "middlewares": [
                        "createAdministrator"
                    ]
                },
                {
                    "path": "/api/v1/admin/:id",
                    "methods": [
                        "GET"
                    ],
                    "middlewares": [
                        "readAdministrator"
                    ]
                },
                {
                    "path": "/api/v1/producers",
                    "methods": [
                        "POST",
                        "GET"
                    ],
                    "middlewares": [
                        "createProducer"
                    ]
                },
                {
                    "path": "/api/v1/producers/names",
                    "methods": [
                        "GET"
                    ],
                    "middlewares": [
                        "getProducerNames"
                    ]
                },
                {
                    "path": "/api/v1/producers/:id/products",
                    "methods": [
                        "GET"
                    ],
                    "middlewares": [
                        "getProductsByProducerId"
                    ]
                },
                {
                    "path": "/api/v1/producers/:id",
                    "methods": [
                        "GET",
                        "PUT",
                        "PATCH",
                        "DELETE"
                    ],
                    "middlewares": [
                        "readProducer"
                    ]
                },
                {
                    "path": "/api/v1/products",
                    "methods": [
                        "POST",
                        "GET"
                    ],
                    "middlewares": [
                        "createProduct"
                    ]
                },
                {
                    "path": "/api/v1/products/:id",
                    "methods": [
                        "GET",
                        "DELETE",
                        "PUT",
                        "PATCH"
                    ],
                    "middlewares": [
                        "readProduct"
                    ]
                },
                {
                    "path": "/api/v1/clients",
                    "methods": [
                        "POST",
                        "GET"
                    ],
                    "middlewares": [
                        "createClient"
                    ]
                },
                {
                    "path": "/api/v1/clients/:id",
                    "methods": [
                        "GET",
                        "DELETE",
                        "PUT",
                        "PATCH"
                    ],
                    "middlewares": [
                        "readClient"
                    ]
                },
                {
                    "path": "/api/v2/products",
                    "methods": [
                        "POST"
                    ],
                    "middlewares": [
                        "verifyFirebaseToken",
                        "createProductV2"
                    ]
                },
                {
                    "path": "/api/v2/products/:id",
                    "methods": [
                        "PUT",
                        "PATCH",
                        "DELETE"
                    ],
                    "middlewares": [
                        "verifyFirebaseToken",
                        "completeUpdateProductV2"
                    ]
                },
                {
                    "path": "/auth/clients/",
                    "methods": [
                        "POST"
                    ],
                    "middlewares": [
                        "registerClientController"
                    ]
                },
                {
                    "path": "/auth/producers/",
                    "methods": [
                        "POST"
                    ],
                    "middlewares": [
                        "registerProducerController"
                    ]
                },
                {
                    "path": "/auth/login/",
                    "methods": [
                        "POST"
                    ],
                    "middlewares": [
                        "loginController"
                    ]
                },
                {
                    "path": "/api/v1/orders",
                    "methods": [
                        "POST",
                        "GET"
                    ],
                    "middlewares": [
                        "verifyFirebaseToken",
                        "createOrder"
                    ]
                },
                {
                    "path": "/api/v1/orders/:orderId",
                    "methods": [
                        "DELETE"
                    ],
                    "middlewares": [
                        "verifyFirebaseToken",
                        "deleteOrder"
                    ]
                },
                {
                    "path": "/api",
                    "methods": [
                        "GET"
                    ],
                    "middlewares": [
                        "anonymous"
                    ]
                }
            ]